[tool.poetry]
name = "floy"
version = "0.1.0"
description = ""
authors = ["tugrulcansollu <tugrul.sollu@marleyspoon.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
pydicom = "^2.4.4"
pynetdicom = "^2.0.2"
fastapi = "^0.108.0"
uvicorn = "^0.25.0"
sqlmodel = "^0.0.14"
pydantic-settings = "^2.1.0"
psycopg2 = "^2.9.9"
alembic = "^1.13.1"
httpx = "^0.26.0"

[tool.poetry.group.dev.dependencies]
autoflake = "*"
black = "*"
flake8 = "*"
flake8-bugbear = "*"
flake8-builtins = "*"
flake8-comprehensions = "*"
flake8-debugger = "*"
flake8-eradicate = "*"
flake8-logging-format = "*"
isort = "*"
mypy = "*"
pep8-naming = "*"
pre-commit = "*"
pytest = "*"
pytest-github-actions-annotate-failures = "*"
pytest-cov = "*"
pyupgrade = "*"
tryceratops = "*"
flake8-print = "*"
httpx = "*"
starlette = "*"
starlette-testclient = "*"
alembic = "^1.13.1"
pika-stubs = "^0.1.3"
sqlalchemy-utils = "^0.41.1"
types-sqlalchemy-utils = "^1.0.1"
playwright = "^1.40.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"





[tool.isort]
profile = "black"
src_paths = ["src", "src/floy","tests"]
line_length = 79


[tool.black]
target-version = ["py37", "py38", "py39"]
include = '\.pyi?$'
line-length = 79
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.pytest_cache
  | \.venv
)/
'''

#[tool.pytest.ini_options]
#addopts = """\
#    --cov src.floy \
#    --cov tests \
#    --cov-report term-missing \
#    --no-cov-on-fail \
#"""

[tool.coverage.report]
fail_under = 100
exclude_lines = [
    'if TYPE_CHECKING:',
    'pragma: no cover'
]

[tool.mypy]
plugins = ["pydantic.mypy"]
follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true
disallow_untyped_defs = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
